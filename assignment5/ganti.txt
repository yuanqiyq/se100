Question 1:
p.then(value => console.log(value));


Question 2:
p.catch(console.log);
================================ comments ===================================
This is correct! However, some additional things to take note: this actually prints out the whole error object. If we only want to output the error message only, we can do this: 
    p.catch(error => console.log(error.message));
    // Output: "Oops!"
=============================================================================

Question 3:
p.then(value => console.log(value));


Question 4:
p.then(value => console.log(value.name));


Question 5:
p.catch(value => console.log(value));
================================ comments ===================================
While this is correct, it might be more intuitive to use the word 'error' instead of 'value' when catching errors
=============================================================================

Question 6:
p.finally(() => console.log('Promise settled'))


Question 7:
p.then(value => console.log(value*2));


Question 8:
p.catch(() => 0)
.then(value => console.log(value));


Question 9:
Promise.all([Promise.resolve(1), Promise.resolve(2), Promise.resolve(3)]).then(values => {
  console.log(values);
});


Question 10:
Promise.race(promises).then(value => {
  console.log(value);
});


Bonus Question:
p.then(value => {
	return new Promise((resolve) => {
		setTimeout(() => {
			resolve("Hello " + value);
		}, 1000);
	});
}).then(value => console.log(value));